{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_document.js"],"sourcesContent":["// /pages/_document.js\nimport { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head>\n        {/* Include universal meta tags that apply to all pages */}\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"description\" content=\"CertifiedSkill.org - Your Certification Platform\" />\n        {/* Do not include <title> or viewport meta here */}\n      </Head>\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;kCAEH,qKAAC;wBAAK,SAAQ;;;;;;kCACd,qKAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;;;;;;;0BAGnC,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_app.jsx"],"sourcesContent":["import \"../styles/globals.css\";\nimport { SessionProvider } from \"next-auth/react\";\nimport { Toaster } from \"sonner\";\nimport { Analytics } from \"@vercel/analytics/react\";\n\nexport default function MyApp({ Component, pageProps: { session, ...pageProps } }) {\n  return (\n    <SessionProvider session={session}>\n      <div className=\"overflow-x-hidden\">\n        <Component {...pageProps} />\n        <Toaster richColors />\n        <Analytics />\n      </div>\n    </SessionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;;;;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,WAAW,EAAE;IAC/E,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS;kBACxB,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAW,GAAG,SAAS;;;;;;8BACxB,qKAAC,4GAAA,CAAA,UAAO;oBAAC,UAAU;;;;;;8BACnB,qKAAC,4JAAA,CAAA,YAAS;;;;;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/lib/db.js"],"sourcesContent":["// lib/db.js\nimport mongoose from 'mongoose';\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Please define the MONGO_URI environment variable');\n}\n\n// Use a global variable to cache the connection in development.\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n  \n  if (!cached.promise) {\n    cached.promise = mongoose.connect(process.env.MONGO_URI)\n      .then((mongoose) => mongoose.connection);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;IAC1B,MAAM,IAAI,MAAM;AAClB;AAEA,gEAAgE;AAChE,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EACpD,IAAI,CAAC,CAAC,WAAa,SAAS,UAAU;IAC3C;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/models/exam.js"],"sourcesContent":["// models/exam.js\nimport mongoose from \"mongoose\";\n\nconst examSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  questions: [\n    {\n      questionText: { type: String, required: true },\n      options: [{ type: String, required: true }],\n      correctAnswer: { type: String, required: true }\n    }\n  ],\n  duration: { type: Number, required: true },\n  startTime: { type: Date, required: true },\n  endTime: { type: Date, required: true }\n});\n\nexport default mongoose.models.Exam || mongoose.model(\"Exam\", examSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QACT;YACE,cAAc;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC7C,SAAS;gBAAC;oBAAE,MAAM;oBAAQ,UAAU;gBAAK;aAAE;YAC3C,eAAe;gBAAE,MAAM;gBAAQ,UAAU;YAAK;QAChD;KACD;IACD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAM,UAAU;IAAK;IACxC,SAAS;QAAE,MAAM;QAAM,UAAU;IAAK;AACxC;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/exam/%5Bid%5D.js"],"sourcesContent":["// pages/exam/[id].js\nimport Head from \"next/head\";\nimport connectToDatabase from \"../../lib/db\";\nimport Exam from \"../../models/exam\";\n\nexport default function ExamLanding({ exam }) {\n  if (!exam) {\n    return (\n      <div className=\"max-w-3xl mx-auto p-6\">\n        <h1 className=\"text-4xl font-bold mb-4\">Exam Not Found</h1>\n        <p>Sorry, this exam does not exist.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>{exam.title} - Free Certification Exam</title>\n        <meta\n          name=\"description\"\n          content={`Join our ${exam.title} exam to challenge your skills and earn a certification at no cost.`}\n        />\n        <meta name=\"robots\" content=\"index,follow\" />\n        <link rel=\"canonical\" href={`https://certifiedskill.org/exam/${exam._id}`} />\n\n        {/* Open Graph tags */}\n        <meta property=\"og:title\" content={`${exam.title} - Free Certification Exam`} />\n        <meta\n          property=\"og:description\"\n          content={`Test your skills with our ${exam.title} exam and get certified. Perfect for professionals looking to validate their expertise.`}\n        />\n        <meta property=\"og:url\" content={`https://certifiedskill.org/exam/${exam._id}`} />\n      </Head>\n\n      <main className=\"max-w-3xl mx-auto p-6\">\n        <h1 className=\"text-4xl font-bold mb-4\">{exam.title}</h1>\n        <p className=\"mb-4\">\n          {exam.description ||\n            \"Take this exam to validate your skills. It is free and offers certification upon passing.\"}\n        </p>\n        <button\n          className=\"bg-blue-500 text-black px-4 py-2 rounded hover:bg-blue-600 transition duration-200\"\n          onClick={() => (window.location.href = `/exam/${exam._id}/start`)}\n        >\n          Start Exam\n        </button>\n      </main>\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  try {\n    await connectToDatabase();\n    const { id } = context.params;\n    \n    // Validate that the \"id\" is a valid 24-character hexadecimal string.\n    if (!id || !/^[0-9a-fA-F]{24}$/.test(id)) {\n      return { notFound: true };\n    }\n    \n    const exam = await Exam.findById(id).lean();\n    if (!exam) {\n      return { notFound: true };\n    }\n    \n    // Use JSON.stringify with a replacer to omit any functions (or other unserializable values)\n    // and then parse back to a plain object.\n    let serializableExam = JSON.parse(JSON.stringify(exam, (key, value) => {\n      if (typeof value === \"function\") {\n        return undefined;\n      }\n      return value;\n    }));\n    \n    // Ensure that our main _id and any nested question _id are explicitly converted to strings.\n    if (serializableExam._id) {\n      serializableExam._id = serializableExam._id.toString();\n    }\n    if (Array.isArray(serializableExam.questions)) {\n      serializableExam.questions = serializableExam.questions.map((question) => {\n        if (question._id) {\n          question._id = question._id.toString();\n        }\n        return question;\n      });\n    }\n    \n    return { props: { exam: serializableExam } };\n  } catch (error) {\n    console.error(\"Error fetching exam:\", error);\n    return { notFound: true };\n  }\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;AACrB;AACA;AACA;;;;;AAEe,SAAS,YAAY,EAAE,IAAI,EAAE;IAC1C,IAAI,CAAC,MAAM;QACT,qBACE,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,qKAAC;8BAAE;;;;;;;;;;;;IAGT;IAEA,qBACE,qKAAC;;0BACC,qKAAC,6HAAA,CAAA,UAAI;;kCACH,qKAAC;;4BAAO,KAAK,KAAK;4BAAC;;;;;;;kCACnB,qKAAC;wBACC,MAAK;wBACL,SAAS,CAAC,SAAS,EAAE,KAAK,KAAK,CAAC,mEAAmE,CAAC;;;;;;kCAEtG,qKAAC;wBAAK,MAAK;wBAAS,SAAQ;;;;;;kCAC5B,qKAAC;wBAAK,KAAI;wBAAY,MAAM,CAAC,gCAAgC,EAAE,KAAK,GAAG,EAAE;;;;;;kCAGzE,qKAAC;wBAAK,UAAS;wBAAW,SAAS,GAAG,KAAK,KAAK,CAAC,0BAA0B,CAAC;;;;;;kCAC5E,qKAAC;wBACC,UAAS;wBACT,SAAS,CAAC,0BAA0B,EAAE,KAAK,KAAK,CAAC,uFAAuF,CAAC;;;;;;kCAE3I,qKAAC;wBAAK,UAAS;wBAAS,SAAS,CAAC,gCAAgC,EAAE,KAAK,GAAG,EAAE;;;;;;;;;;;;0BAGhF,qKAAC;gBAAK,WAAU;;kCACd,qKAAC;wBAAG,WAAU;kCAA2B,KAAK,KAAK;;;;;;kCACnD,qKAAC;wBAAE,WAAU;kCACV,KAAK,WAAW,IACf;;;;;;kCAEJ,qKAAC;wBACC,WAAU;wBACV,SAAS,IAAO,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC;kCACjE;;;;;;;;;;;;;;;;;;AAMT;AAEO,eAAe,mBAAmB,OAAO;IAC9C,IAAI;QACF,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAiB,AAAD;QACtB,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,MAAM;QAE7B,qEAAqE;QACrE,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,CAAC,KAAK;YACxC,OAAO;gBAAE,UAAU;YAAK;QAC1B;QAEA,MAAM,OAAO,MAAM,uGAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;QACzC,IAAI,CAAC,MAAM;YACT,OAAO;gBAAE,UAAU;YAAK;QAC1B;QAEA,4FAA4F;QAC5F,yCAAyC;QACzC,IAAI,mBAAmB,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,KAAK;YAC3D,IAAI,OAAO,UAAU,YAAY;gBAC/B,OAAO;YACT;YACA,OAAO;QACT;QAEA,4FAA4F;QAC5F,IAAI,iBAAiB,GAAG,EAAE;YACxB,iBAAiB,GAAG,GAAG,iBAAiB,GAAG,CAAC,QAAQ;QACtD;QACA,IAAI,MAAM,OAAO,CAAC,iBAAiB,SAAS,GAAG;YAC7C,iBAAiB,SAAS,GAAG,iBAAiB,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC3D,IAAI,SAAS,GAAG,EAAE;oBAChB,SAAS,GAAG,GAAG,SAAS,GAAG,CAAC,QAAQ;gBACtC;gBACA,OAAO;YACT;QACF;QAEA,OAAO;YAAE,OAAO;gBAAE,MAAM;YAAiB;QAAE;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;YAAE,UAAU;QAAK;IAC1B;AACF","debugId":null}}]
}