{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_document.js"],"sourcesContent":["// /pages/_document.js\nimport { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head>\n        {/* Include universal meta tags that apply to all pages */}\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"description\" content=\"CertifiedSkill.org - Your Certification Platform\" />\n        {/* Do not include <title> or viewport meta here */}\n      </Head>\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;kCAEH,qKAAC;wBAAK,SAAQ;;;;;;kCACd,qKAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;;;;;;;0BAGnC,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_app.js"],"sourcesContent":["import \"../styles/globals.css\";\nimport { SessionProvider } from \"next-auth/react\";\n\nexport default function MyApp({ Component, pageProps: { session, ...pageProps } }) {\n  return (\n    <SessionProvider session={session}>\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,WAAW,EAAE;IAC/E,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS;kBACxB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/dashboard/index.js"],"sourcesContent":["// pages/api/certificates/index.js\n\nimport PDFDocument from 'pdfkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport connectToDatabase from '../../../lib/db';\n\nexport default async function handler(req, res) {\n  // Connect to the database once for both GET and POST methods.\n  const connection = await connectToDatabase();\n  const db = connection.db || connection.useDb('myDatabase'); // Adjust if needed\n\n  if (req.method === 'GET') {\n    // GET: List certificates for a user.\n    // You can query by userEmail or userId.\n    const { userEmail, userId } = req.query;\n    if (!userEmail && !userId) {\n      return res\n        .status(400)\n        .json({ message: 'Please provide a userEmail or userId in the query string' });\n    }\n    const query = {};\n    if (userEmail) query.userEmail = userEmail;\n    if (userId) query.userId = userId;\n    \n    try {\n      const certificates = await db.collection('certificates').find(query).toArray();\n      return res.status(200).json(certificates);\n    } catch (error) {\n      console.error('Error fetching certificates:', error);\n      return res.status(500).json({ message: 'Internal Server Error' });\n    }\n  } else if (req.method === 'POST') {\n    // POST: Generate a certificate PDF for a passed exam.\n    // Expected Payload: { userId, userName, examId, examName, passed, [userEmail] }\n    const { userId, userName, examId, examName, passed, userEmail } = req.body;\n    \n    if (!passed) {\n      return res.status(400).json({ message: 'User did not pass the exam' });\n    }\n    \n    try {\n      // Check if a certificate already exists for this user and exam.\n      let certificate = await db.collection('certificates').findOne({ userId, examId });\n  \n      if (certificate) {\n        // If a certificate exists but is missing a certificateId, update it.\n        if (!certificate.certificateId) {\n          certificate.certificateId = uuidv4();\n          await db.collection('certificates').updateOne(\n            { _id: certificate._id },\n            { $set: { certificateId: certificate.certificateId } }\n          );\n        }\n      } else {\n        // Create a new certificate record.\n        certificate = {\n          userId,\n          userName,\n          examId,\n          examName,\n          certificateId: uuidv4(), // Generate a unique certificate ID.\n          issuedAt: new Date(),\n          // Optionally store the user's email for later queries.\n          ...(userEmail && { userEmail })\n        };\n        await db.collection('certificates').insertOne(certificate);\n      }\n  \n      // Set headers to render the PDF inline.\n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', 'inline; filename=\"certificate.pdf\"');\n  \n      // Create a new PDF document with a landscape layout.\n      const doc = new PDFDocument({\n        size: 'A4',\n        layout: 'landscape',\n        margins: { top: 50, bottom: 50, left: 50, right: 50 }\n      });\n  \n      // Pipe the PDF document directly to the response.\n      doc.pipe(res);\n  \n      // Get the page dimensions.\n      const { width, height } = doc.page;\n  \n      // -------------------------------\n      // Professional Certificate Design\n      // -------------------------------\n  \n      // 1. Background & Border.\n      doc.rect(0, 0, width, height).fill('#ffffff'); // White background.\n      doc\n        .rect(40, 40, width - 80, height - 80)\n        .lineWidth(2)\n        .stroke('#333333'); // Clean, modern border.\n  \n      // 2. Header: Brand Information.\n      doc\n        .fillColor('#333333')\n        .font('Helvetica-Bold')\n        .fontSize(20)\n        .text('CertifiedSkill.org', 0, 60, { align: 'center' });\n      doc\n        .font('Helvetica')\n        .fontSize(12)\n        .text('Your trusted partner in professional certifications', { align: 'center' });\n  \n      // 3. Certificate Title.\n      doc.moveDown(2);\n      doc\n        .font('Helvetica-Bold')\n        .fontSize(36)\n        .text('Certificate of Achievement', { align: 'center', underline: true });\n  \n      // 4. Certificate Details.\n      doc.moveDown(1.5);\n      doc\n        .font('Helvetica')\n        .fontSize(18)\n        .text('This certificate verifies that', { align: 'center' });\n      doc.moveDown(0.5);\n      doc\n        .font('Helvetica-Bold')\n        .fontSize(28)\n        .text(userName, { align: 'center' });\n      doc.moveDown(0.5);\n      doc\n        .font('Helvetica')\n        .fontSize(18)\n        .text('has successfully passed the exam:', { align: 'center' });\n      doc.moveDown(0.5);\n      doc\n        .font('Helvetica-Bold')\n        .fontSize(24)\n        .text(examName, { align: 'center' });\n  \n      // 5. Authenticity Assurance Text.\n      doc.moveDown(1.5);\n      doc\n        .font('Helvetica')\n        .fontSize(14)\n        .text('This is an authentic certificate digitally issued by CertifiedSkill.org.', {\n          align: 'center'\n        });\n      doc.text('Visit CertifiedSkill.org.com to verify its authenticity.', { align: 'center' });\n  \n      // 6. Footer Details.\n      const issuedOn = new Date(certificate.issuedAt).toLocaleDateString();\n      // Display Certificate ID in the bottom left.\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text(`Certificate ID: ${certificate.certificateId}`, 50, height - 70, { align: 'left' });\n      // Display the issued date in the bottom right.\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text(`Issued on: ${issuedOn}`, -50, height - 70, { align: 'right' });\n  \n      // 7. Signature Placeholder at the bottom-right.\n      const signY = height - 100;\n      const signX = width - 200;\n      doc\n        .moveTo(signX, signY)\n        .lineTo(signX + 100, signY)\n        .stroke('#333333');\n      doc\n        .font('Helvetica')\n        .fontSize(10)\n        .text('Authorized Signature', signX, signY + 5, { align: 'center', width: 100 });\n  \n      // 8. Add GetCertify Stamp.\n      // Draw a circular stamp on the bottom left.\n      const stampDiameter = 100;\n      const stampX = 50; // Adjust as needed.\n      const stampY = height - stampDiameter - 50; // Adjust as needed.\n  \n      // Draw the circular border.\n      doc\n        .circle(stampX + stampDiameter / 2, stampY + stampDiameter / 2, stampDiameter / 2)\n        .lineWidth(2)\n        .stroke('#003366');\n  \n      // Fill the circle with a semiâ€‘transparent fill.\n      doc\n        .circle(stampX + stampDiameter / 2, stampY + stampDiameter / 2, stampDiameter / 2)\n        .fillOpacity(0.1)\n        .fill('#003366');\n  \n      // Restore full opacity and add the stamp text.\n      doc.fillOpacity(1);\n      doc\n        .font('Helvetica-Bold')\n        .fontSize(14)\n        .fillColor('#003366')\n        .text('GetCertify', stampX, stampY + stampDiameter / 2 - 7, {\n          width: stampDiameter,\n          align: 'center'\n        });\n  \n      // Finalize and end the PDF stream.\n      doc.end();\n    } catch (error) {\n      console.error('Certificate generation error:', error);\n      return res.status(500).json({ message: 'Internal Server Error' });\n    }\n  } else {\n    // Only GET and POST are allowed.\n    return res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}