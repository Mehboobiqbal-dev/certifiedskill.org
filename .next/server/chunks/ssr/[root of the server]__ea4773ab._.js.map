{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_document.js"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_app.js"],"sourcesContent":["import \"../styles/globals.css\";\n\nimport { SessionProvider } from \"next-auth/react\";\n\nexport default function MyApp({ Component, pageProps }) {\n  return (\n    <SessionProvider session={pageProps.session}>\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACpD,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;kBACzC,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/teacher/create-exam.js"],"sourcesContent":["import { useSession, getSession } from 'next-auth/next';\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\n\nexport default function CreateExam() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [students, setStudents] = useState([]);\n  const [title, setTitle] = useState('');\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '', '', '']);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [selectedStudents, setSelectedStudents] = useState([]);\n\n  // Fetch students when the page loads\n  useEffect(() => {\n    if (status === 'authenticated' && session?.user.role === 'teacher') {\n      fetch('/api/students')\n        .then((res) => res.json())\n        .then(setStudents);\n    }\n  }, [status, session]);\n\n  // Redirect if not authenticated or not a teacher\n  if (status === 'unauthenticated' || (session && session.user.role !== 'teacher')) {\n    router.push('/');\n    return null;\n  }\n  if (status === 'loading') return <p>Loading...</p>;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const examData = {\n      title,\n      questions: [{ questionText: question, options, correctAnswer }],\n      duration: 60, // Hardcoded for simplicity\n      startTime: new Date(), // Set to now for simplicity\n      endTime: new Date(Date.now() + 60 * 60 * 1000), // 1 hour later\n      assignedTo: selectedStudents,\n    };\n\n    const res = await fetch('/api/exams', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(examData),\n    });\n\n    if (res.ok) {\n      alert('Exam created successfully');\n      router.push('/dashboard');\n    } else {\n      alert('Error creating exam');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Exam</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Title:\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n        </label>\n        <br />\n        <label>\n          Question:\n          <input type=\"text\" value={question} onChange={(e) => setQuestion(e.target.value)} required />\n        </label>\n        <br />\n        <label>\n          Options:\n          {options.map((opt, i) => (\n            <input\n              key={i}\n              type=\"text\"\n              value={opt}\n              onChange={(e) => {\n                const newOptions = [...options];\n                newOptions[i] = e.target.value;\n                setOptions(newOptions);\n              }}\n            />\n          ))}\n        </label>\n        <br />\n        <label>\n          Correct Answer:\n          <input\n            type=\"text\"\n            value={correctAnswer}\n            onChange={(e) => setCorrectAnswer(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Assign to Students:\n          <select\n            multiple\n            value={selectedStudents}\n            onChange={(e) =>\n              setSelectedStudents(Array.from(e.target.selectedOptions, (option) => option.value))\n            }\n          >\n            {students.map((student) => (\n              <option key={student._id} value={student._id}>\n                {student.username}\n              </option>\n            ))}\n          </select>\n        </label>\n        <br />\n        <button type=\"submit\">Create Exam</button>\n      </form>\n    </div>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getSession(context);\n  if (!session || session.user.role !== 'teacher') {\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    };\n  }\n  return { props: {} };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}