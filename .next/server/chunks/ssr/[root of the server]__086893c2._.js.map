{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_document.js"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_app.js"],"sourcesContent":["import \"../styles/globals.css\";\n\nimport { SessionProvider } from \"next-auth/react\";\n\nexport default function MyApp({ Component, pageProps }) {\n  return (\n    <SessionProvider session={pageProps.session}>\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACpD,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS,UAAU,OAAO;kBACzC,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/exam/%5Bid%5D.js"],"sourcesContent":["import { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport { useEffect, useState, useRef } from 'react';\nimport Head from 'next/head';\n\nexport default function Exam({ exam }) {\n  const { status } = useSession();\n  const router = useRouter();\n  const [answers, setAnswers] = useState({});\n  const videoRef = useRef(null);\n  const [cheatingDetected, setCheatingDetected] = useState(false);\n\n  useEffect(() => {\n    // Redirect if not signed in\n    if (status === 'unauthenticated') {\n      router.push('/');\n      return;\n    }\n\n    // Tab change detection\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        setCheatingDetected(true);\n        alert('Tab change detected! This will be flagged.');\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    // Face detection setup using global FaceDetection loaded via CDN\n    const setupFaceDetection = () => {\n      if (typeof window !== 'undefined' && window.FaceDetection) {\n        const faceDetection = new window.FaceDetection({\n          locateFile: (file) =>\n            `https://cdn.jsdelivr.net/npm/@mediapipe/face_detection/${file}`,\n        });\n        faceDetection.setOptions({ model: 'short', minDetectionConfidence: 0.5 });\n        faceDetection.onResults((results) => {\n          if (!results.detections || !results.detections.length) {\n            setCheatingDetected(true);\n            alert('No face detected! Please stay in view.');\n          }\n        });\n\n        const video = videoRef.current;\n        navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\n          video.srcObject = stream;\n          video.play();\n          const detect = () =>\n            faceDetection.send({ image: video }).then(() => requestAnimationFrame(detect));\n          detect();\n        });\n      } else {\n        console.error('FaceDetection is not available on window.');\n      }\n    };\n\n    setupFaceDetection();\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [status, router]);\n\n  const handleSubmit = async () => {\n    const res = await fetch('/api/submit-exam', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ examId: exam._id, answers: Object.values(answers) }),\n    });\n    if (res.ok) {\n      alert('Exam submitted!');\n      router.push('/dashboard');\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <Head>\n        {/* Load the Mediapipe Face Detection script from the CDN */}\n        <script\n          src=\"https://cdn.jsdelivr.net/npm/@mediapipe/face_detection/face_detection.js\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      <h1>{exam.title}</h1>\n      <video\n        ref={videoRef}\n        width=\"320\"\n        height=\"240\"\n        style={{ position: 'fixed', top: 10, right: 10 }}\n      />\n      {exam.questions.map((q, index) => (\n        <div key={index} style={{ marginBottom: '20px' }}>\n          <p>{q.questionText}</p>\n          {q.options.map((option, i) => (\n            <label key={i}>\n              <input\n                type=\"radio\"\n                name={`question-${index}`}\n                value={option}\n                onChange={() => setAnswers({ ...answers, [index]: option })}\n              />\n              {option}\n            </label>\n          ))}\n        </div>\n      ))}\n      <button onClick={handleSubmit} disabled={cheatingDetected}>\n        Submit Exam\n      </button>\n      {cheatingDetected && (\n        <p style={{ color: 'red' }}>\n          Cheating detected! Resolve issues to submit.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport async function getServerSideProps({ params }) {\n  // Note the updated URL to use the plural \"exams\" dynamic API route\n  const res = await fetch(`https://3000-idx-get-certified-1742011310099.cluster-nx3nmmkbnfe54q3dd4pfbgilpc.cloudworkstations.dev/api/exams/${params.id}`);\n  const exam = await res.json();\n  return { props: { exam } };\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS,KAAK,EAAE,IAAI,EAAE;IACnC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD;IAC5B,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IACxC,MAAM,WAAW,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAE;IACxB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,4BAA4B;QAC5B,IAAI,WAAW,mBAAmB;YAChC,OAAO,IAAI,CAAC;YACZ;QACF;QAEA,uBAAuB;QACvB,MAAM,yBAAyB;YAC7B,IAAI,SAAS,eAAe,KAAK,UAAU;gBACzC,oBAAoB;gBACpB,MAAM;YACR;QACF;QACA,SAAS,gBAAgB,CAAC,oBAAoB;QAE9C,iEAAiE;QACjE,MAAM,qBAAqB;YACzB,uCAA2D;;YAqB3D,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF;QAEA;QAEA,OAAO;YACL,SAAS,mBAAmB,CAAC,oBAAoB;QACnD;IACF,GAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,eAAe;QACnB,MAAM,MAAM,MAAM,MAAM,oBAAoB;YAC1C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE,QAAQ,KAAK,GAAG;gBAAE,SAAS,OAAO,MAAM,CAAC;YAAS;QAC3E;QACA,IAAI,IAAI,EAAE,EAAE;YACV,MAAM;YACN,OAAO,IAAI,CAAC;QACd;IACF;IAEA,qBACE,qKAAC;QAAI,OAAO;YAAE,SAAS;QAAO;;0BAC5B,qKAAC,6HAAA,CAAA,UAAI;0BAEH,cAAA,qKAAC;oBACC,KAAI;oBACJ,aAAY;;;;;;;;;;;0BAGhB,qKAAC;0BAAI,KAAK,KAAK;;;;;;0BACf,qKAAC;gBACC,KAAK;gBACL,OAAM;gBACN,QAAO;gBACP,OAAO;oBAAE,UAAU;oBAAS,KAAK;oBAAI,OAAO;gBAAG;;;;;;YAEhD,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,sBACtB,qKAAC;oBAAgB,OAAO;wBAAE,cAAc;oBAAO;;sCAC7C,qKAAC;sCAAG,EAAE,YAAY;;;;;;wBACjB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,kBACtB,qKAAC;;kDACC,qKAAC;wCACC,MAAK;wCACL,MAAM,CAAC,SAAS,EAAE,OAAO;wCACzB,OAAO;wCACP,UAAU,IAAM,WAAW;gDAAE,GAAG,OAAO;gDAAE,CAAC,MAAM,EAAE;4CAAO;;;;;;oCAE1D;;+BAPS;;;;;;mBAHN;;;;;0BAeZ,qKAAC;gBAAO,SAAS;gBAAc,UAAU;0BAAkB;;;;;;YAG1D,kCACC,qKAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAG;;;;;;;;;;;;AAMpC;AAEO,eAAe,mBAAmB,EAAE,MAAM,EAAE;IACjD,mEAAmE;IACnE,MAAM,MAAM,MAAM,MAAM,CAAC,gHAAgH,EAAE,OAAO,EAAE,EAAE;IACtJ,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO;QAAE,OAAO;YAAE;QAAK;IAAE;AAC3B","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}