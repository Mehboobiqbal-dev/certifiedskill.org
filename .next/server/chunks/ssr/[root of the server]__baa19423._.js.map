{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_document.js"],"sourcesContent":["// /pages/_document.js\nimport { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head>\n        {/* Include universal meta tags that apply to all pages */}\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"description\" content=\"GetCertified - Your Certification Platform\" />\n        {/* Do not include <title> or viewport meta here */}\n      </Head>\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;kCAEH,qKAAC;wBAAK,SAAQ;;;;;;kCACd,qKAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;;;;;;;0BAGnC,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/_app.js"],"sourcesContent":["import \"../styles/globals.css\";\nimport { SessionProvider } from \"next-auth/react\";\n\nexport default function MyApp({ Component, pageProps: { session, ...pageProps } }) {\n  return (\n    <SessionProvider session={session}>\n      <Component {...pageProps} />\n    </SessionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;AAEe,SAAS,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,WAAW,EAAE;IAC/E,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS;kBACxB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/components/AntiCheating.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction AntiCheatingMulti({ onCheatingDetected, detectionThreshold = 3000 }) {\n  const [cheating, setCheating] = useState(false);\n  const [cheatCount, setCheatCount] = useState(0);\n  // If the page is inactive for longer than this timeout, flag cheating.\n  let visibilityTimeout;\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      // When page becomes hidden, start a timer.\n      if (document.hidden) {\n        visibilityTimeout = setTimeout(() => {\n          setCheating(true);\n          setCheatCount((prev) => prev + 1);\n          onCheatingDetected();\n        }, detectionThreshold);\n      } else {\n        // When page is shown, clear any pending timeout.\n        clearTimeout(visibilityTimeout);\n        setCheating(false);\n      }\n    };\n\n    const handleBlur = () => {\n      // User left the window (e.g., switched tabs)\n      visibilityTimeout = setTimeout(() => {\n        setCheating(true);\n        setCheatCount((prev) => prev + 1);\n        onCheatingDetected();\n      }, detectionThreshold);\n    };\n\n    const handleFocus = () => {\n      clearTimeout(visibilityTimeout);\n      setCheating(false);\n    };\n\n    // Optional: detect when mouse leaves the window\n    const handleMouseLeave = (e) => {\n      // If mouse leaves near the top (e.g., to the browser toolbar)\n      if (e.clientY <= 0) {\n        setCheating(true);\n        setCheatCount((prev) => prev + 1);\n        onCheatingDetected();\n      }\n    };\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    window.addEventListener(\"blur\", handleBlur);\n    window.addEventListener(\"focus\", handleFocus);\n    document.addEventListener(\"mouseleave\", handleMouseLeave);\n\n    // Cleanup listeners\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.removeEventListener(\"blur\", handleBlur);\n      window.removeEventListener(\"focus\", handleFocus);\n      document.removeEventListener(\"mouseleave\", handleMouseLeave);\n      clearTimeout(visibilityTimeout);\n    };\n  }, [onCheatingDetected, detectionThreshold]);\n\n  return (\n    <>\n      {cheating && (\n        <div className=\"fixed top-4 left-4 bg-red-600 text-white px-4 py-2 rounded shadow-md\">\n          Warning: Cheating Detected! (Count: {cheatCount})\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AntiCheatingMulti;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,kBAAkB,EAAE,kBAAkB,EAAE,qBAAqB,IAAI,EAAE;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,uEAAuE;IACvE,IAAI;IAEJ,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,yBAAyB;YAC7B,2CAA2C;YAC3C,IAAI,SAAS,MAAM,EAAE;gBACnB,oBAAoB,WAAW;oBAC7B,YAAY;oBACZ,cAAc,CAAC,OAAS,OAAO;oBAC/B;gBACF,GAAG;YACL,OAAO;gBACL,iDAAiD;gBACjD,aAAa;gBACb,YAAY;YACd;QACF;QAEA,MAAM,aAAa;YACjB,6CAA6C;YAC7C,oBAAoB,WAAW;gBAC7B,YAAY;gBACZ,cAAc,CAAC,OAAS,OAAO;gBAC/B;YACF,GAAG;QACL;QAEA,MAAM,cAAc;YAClB,aAAa;YACb,YAAY;QACd;QAEA,gDAAgD;QAChD,MAAM,mBAAmB,CAAC;YACxB,8DAA8D;YAC9D,IAAI,EAAE,OAAO,IAAI,GAAG;gBAClB,YAAY;gBACZ,cAAc,CAAC,OAAS,OAAO;gBAC/B;YACF;QACF;QAEA,SAAS,gBAAgB,CAAC,oBAAoB;QAC9C,OAAO,gBAAgB,CAAC,QAAQ;QAChC,OAAO,gBAAgB,CAAC,SAAS;QACjC,SAAS,gBAAgB,CAAC,cAAc;QAExC,oBAAoB;QACpB,OAAO;YACL,SAAS,mBAAmB,CAAC,oBAAoB;YACjD,OAAO,mBAAmB,CAAC,QAAQ;YACnC,OAAO,mBAAmB,CAAC,SAAS;YACpC,SAAS,mBAAmB,CAAC,cAAc;YAC3C,aAAa;QACf;IACF,GAAG;QAAC;QAAoB;KAAmB;IAE3C,qBACE;kBACG,0BACC,qKAAC;YAAI,WAAU;;gBAAuE;gBAC/C;gBAAW;;;;;;;;AAK1D;uCAEe","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/models/user.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: false,\n  },\n});\n\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,MAAM;QACJ,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,QAAQ;IACV;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;AACF;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/lib/db.js"],"sourcesContent":["// lib/db.js\nimport mongoose from 'mongoose';\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Please define the MONGO_URI environment variable');\n}\n\n// Use a global variable to cache the connection in development.\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n  \n  if (!cached.promise) {\n    cached.promise = mongoose.connect(process.env.MONGO_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    }).then(() => mongoose.connection);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;IAC1B,MAAM,IAAI,MAAM;AAClB;AAEA,gEAAgE;AAChE,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;YACvD,iBAAiB;YACjB,oBAAoB;QACtB,GAAG,IAAI,CAAC,IAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU;IACnC;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/app/api/auth/%5B...nextauth%5D/authOptions.js"],"sourcesContent":["import CredentialsProvider from \"next-auth/providers/credentials\";\nimport GithubProvider from \"next-auth/providers/github\";\nimport User from \"../../../../models/user\";\nimport connectToDatabase from \"../../../../lib/db\";\nimport bcrypt from \"bcryptjs\";\n\nexport const authOptions = {\n  session: {\n    strategy: \"jwt\",\n  },\n  providers: [\n    GithubProvider({\n      clientId: process.env.GITHUB_ID,\n      clientSecret: process.env.GITHUB_SECRET,\n    }),\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: {\n          label: \"Email\",\n          type: \"text\",\n          placeholder: \"you@example.com\"\n        },\n        password: {\n          label: \"Password\",\n          type: \"password\"\n        },\n      },\n      async authorize(credentials) {\n        try {\n          await connectToDatabase();\n          // Find the user by email\n          const user = await User.findOne({ email: credentials?.email });\n          if (!user)\n            throw new Error(\"No user found with that email.\");\n          // Compare the password with the hashed password\n          const isValidPassword = await bcrypt.compare(\n            credentials?.password || \"\",\n            user.password\n          );\n          if (!isValidPassword)\n            throw new Error(\"Invalid password.\");\n          return user;\n        } catch (error) {\n          console.error(\"Authorize error:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n  callbacks: {\n    async signIn({ account, profile }) {\n      if (account?.provider === \"github\") {\n        await connectToDatabase();\n        const existingUser = await User.findOne({ email: profile?.email });\n        if (!existingUser) {\n          await User.create({\n            name: profile?.name || profile?.login,\n            email: profile?.email,\n            role: \"student\",\n          });\n        }\n      }\n      return true;\n    },\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user._id.toString();\n        token.email = user.email;\n        token.name = user.name;\n        token.role = user.role || \"student\";\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user = {\n          id: token.id,\n          email: token.email,\n          name: token.name,\n          role: token.role || \"student\",\n        };\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/sign-in\",\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEO,MAAM,cAAc;IACzB,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,CAAA,GAAA,+JAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QACA,CAAA,GAAA,yKAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBACL,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,UAAU;oBACR,OAAO;oBACP,MAAM;gBACR;YACF;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAiB,AAAD;oBACtB,yBAAyB;oBACzB,MAAM,OAAO,MAAM,uGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;wBAAE,OAAO,aAAa;oBAAM;oBAC5D,IAAI,CAAC,MACH,MAAM,IAAI,MAAM;oBAClB,gDAAgD;oBAChD,MAAM,kBAAkB,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAC1C,aAAa,YAAY,IACzB,KAAK,QAAQ;oBAEf,IAAI,CAAC,iBACH,MAAM,IAAI,MAAM;oBAClB,OAAO;gBACT,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,oBAAoB;oBAClC,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,OAAO,EAAE,OAAO,EAAE;YAC/B,IAAI,SAAS,aAAa,UAAU;gBAClC,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAiB,AAAD;gBACtB,MAAM,eAAe,MAAM,uGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;oBAAE,OAAO,SAAS;gBAAM;gBAChE,IAAI,CAAC,cAAc;oBACjB,MAAM,uGAAA,CAAA,UAAI,CAAC,MAAM,CAAC;wBAChB,MAAM,SAAS,QAAQ,SAAS;wBAChC,OAAO,SAAS;wBAChB,MAAM;oBACR;gBACF;YACF;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,QAAQ;gBAC5B,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI;YAC5B;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,GAAG;oBACb,IAAI,MAAM,EAAE;oBACZ,OAAO,MAAM,KAAK;oBAClB,MAAM,MAAM,IAAI;oBAChB,MAAM,MAAM,IAAI,IAAI;gBACtB;YACF;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/models/exam.js"],"sourcesContent":["// models/exam.js\nimport mongoose from \"mongoose\";\n\nconst examSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  questions: [\n    {\n      questionText: { type: String, required: true },\n      options: [{ type: String, required: true }],\n      correctAnswer: { type: String, required: true }\n    }\n  ],\n  duration: { type: Number, required: true },\n  startTime: { type: Date, required: true },\n  endTime: { type: Date, required: true }\n});\n\nexport default mongoose.models.Exam || mongoose.model(\"Exam\", examSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QACT;YACE,cAAc;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC7C,SAAS;gBAAC;oBAAE,MAAM;oBAAQ,UAAU;gBAAK;aAAE;YAC3C,eAAe;gBAAE,MAAM;gBAAQ,UAAU;YAAK;QAChD;KACD;IACD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAM,UAAU;IAAK;IACxC,SAAS;QAAE,MAAM;QAAM,UAAU;IAAK;AACxC;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/exam/%5Bid%5D.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport AntiCheating from \"../../components/AntiCheating\";\nimport { useSession } from \"next-auth/react\";\n\n// Import NextAuth server-side helper and your auth options\nimport { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"../../app/api/auth/[...nextauth]/authOptions\";\nimport connectToDatabase from \"../../lib/db\";\nimport Exam from \"../../models/exam\";\n\nexport default function ExamPage({ exam }) {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n\n  // Record the user's selected answers.\n  const [userAnswers, setUserAnswers] = useState({});\n  // Track whether the exam is submitted.\n  const [submitted, setSubmitted] = useState(false);\n  // For cheating detection.\n  const [cheatingCount, setCheatingCount] = useState(0);\n  // Total time taken (in seconds) across all questions.\n  const [timeTaken, setTimeTaken] = useState(0);\n\n  // For per-question handling:\n  const QUESTION_TIME = 20; // seconds per question\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(QUESTION_TIME);\n\n  // Timer effect for each question.\n  useEffect(() => {\n    if (submitted) return;\n\n    const timer = setInterval(() => {\n      setQuestionTimeLeft((prevTime) => {\n        if (prevTime <= 1) {\n          proceedToNextQuestion(); // Auto move on when time's up.\n          return QUESTION_TIME;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [submitted, currentQuestionIndex]);\n\n  // Proceed to next question.\n  const proceedToNextQuestion = () => {\n    setTimeTaken((prev) => prev + (QUESTION_TIME - questionTimeLeft));\n\n    if (currentQuestionIndex < exam.questions.length - 1) {\n      setCurrentQuestionIndex((prev) => prev + 1);\n      setQuestionTimeLeft(QUESTION_TIME);\n    } else {\n      handleSubmit();\n    }\n  };\n\n  // Called when the user selects an option.\n  const handleOptionChange = (selectedOption) => {\n    setUserAnswers((prev) => ({\n      ...prev,\n      [currentQuestionIndex]: selectedOption,\n    }));\n    proceedToNextQuestion();\n  };\n\n  // When the exam is finished.\n  const handleSubmit = async () => {\n    if (submitted) return;\n    setSubmitted(true);\n\n    const correctCount = exam.questions.reduce((count, question, idx) => {\n      return userAnswers[idx] === question.correctAnswer ? count + 1 : count;\n    }, 0);\n    const total = exam.questions.length;\n    const passingScore = 40;\n    const passed = correctCount >= passingScore;\n\n    const resultData = {\n      userId: session?.user?.id,\n      examId: exam._id,\n      userName: session?.user?.name,\n      examName: exam.title,\n      score: correctCount,\n      total,\n      passed,\n      timeTaken,\n      cheatingCount,\n      createdAt: new Date(),\n    };\n\n    await onExamSubmit(resultData);\n  };\n\n  const handleCheatingDetected = () => {\n    setCheatingCount((prev) => prev + 1);\n  };\n\n  if (!exam.questions || exam.questions.length === 0) {\n    return <p>No questions found.</p>;\n  }\n\n  const currentQuestion = exam.questions[currentQuestionIndex];\n\n  return (\n    <div className=\"relative\">\n      {status === \"loading\" ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <AntiCheating onCheatingDetected={handleCheatingDetected} />\n          <div className=\"p-6 max-w-3xl mx-auto\">\n            <Head>\n              <title>{exam.title}</title>\n            </Head>\n            <h1 className=\"text-3xl font-bold mb-6\">{exam.title}</h1>\n            <h2 className=\"text-xl mb-4\">\n              Question {currentQuestionIndex + 1} of {exam.questions.length}\n            </h2>\n            <div className=\"bg-white shadow-md rounded-lg p-4 mb-6 border border-gray-200\">\n              <p className=\"text-lg font-medium mb-3\">\n                {currentQuestion.questionText}\n              </p>\n              <div>\n                {currentQuestion.options.map((option, i) => (\n                  <label\n                    key={i}\n                    className=\"block p-2 mb-2 border rounded cursor-pointer hover:bg-gray-100\"\n                  >\n                    <input\n                      type=\"radio\"\n                      name={`question-${currentQuestionIndex}`}\n                      value={option}\n                      onChange={() => handleOptionChange(option)}\n                      checked={userAnswers[currentQuestionIndex] === option}\n                      className=\"mr-2\"\n                    />\n                    {option}\n                  </label>\n                ))}\n              </div>\n              <div className=\"mt-3\">\n                <p className=\"text-sm text-gray-500\">\n                  Time left for this question: {questionTimeLeft} seconds\n                </p>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nasync function onExamSubmit(resultData) {\n  try {\n    const resultRes = await fetch(\"/api/exams/result\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(resultData),\n      cache: \"no-store\",\n    });\n    const resultJson = await resultRes.json();\n    if (!resultRes.ok) {\n      console.error(resultJson.message);\n      return;\n    }\n\n    if (resultData.passed) {\n      const certRes = await fetch(\"/api/certificate/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          userId: resultData.userId,\n          examId: resultData.examId,\n          userName: resultData.userName,\n          examName: resultData.examName,\n          passed: resultData.passed,\n        }),\n        cache: \"no-store\",\n      });\n      const certJson = await certRes.json();\n      if (certRes.ok) {\n        alert(\n          \"Certificate generated! Certificate Number: \" +\n            certJson.certificateNumber\n        );\n      } else {\n        console.error(certJson.message);\n      }\n    }\n  } catch (error) {\n    console.error(\"Submission error:\", error);\n  }\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getServerSession(\n    context.req,\n    context.res,\n    authOptions\n  );\n  if (!session) {\n    return { redirect: { destination: \"/sign-in\", permanent: false } };\n  }\n\n  try {\n    await connectToDatabase();\n    const exam = await Exam.findById(context.params.id);\n    if (!exam || !exam.questions) {\n      return { notFound: true };\n    }\n    const examObj = JSON.parse(JSON.stringify(exam));\n    return { props: { exam: examObj } };\n  } catch (error) {\n    console.error(\"Error fetching exam:\", error);\n    return { notFound: true };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}