{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/lib/db.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Please define the MONGO_URI environment variable');\n}\n\n// Use a global variable to cache the connection\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const options = { useNewUrlParser: true, useUnifiedTopology: true };\n\n    cached.promise = mongoose\n      .connect(process.env.MONGO_URI, options)\n      .then((mongooseInstance) => {\n        return { db: mongooseInstance.connection.db };\n      });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;IAC1B,MAAM,IAAI,MAAM;AAClB;AAEA,gDAAgD;AAChD,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,UAAU;YAAE,iBAAiB;YAAM,oBAAoB;QAAK;QAElE,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CACtB,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE,SAC/B,IAAI,CAAC,CAAC;YACL,OAAO;gBAAE,IAAI,iBAAiB,UAAU,CAAC,EAAE;YAAC;QAC9C;IACJ;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/models/Exam.js"],"sourcesContent":["// models/Exam.js\n// models/Exam.js\nimport mongoose from 'mongoose';\n\nconst examSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  questions: [\n    {\n      questionText: { type: String, required: true },\n      options: [{ type: String, required: true }],\n      correctAnswer: { type: String, required: true }\n    }\n  ],\n  duration: { type: Number, required: true },\n  startTime: { type: Date, required: true },\n  endTime: { type: Date, required: true }\n});\n\nexport default mongoose.models.Exam || mongoose.model('Exam', examSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;AACjB,iBAAiB;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QACT;YACE,cAAc;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC7C,SAAS;gBAAC;oBAAE,MAAM;oBAAQ,UAAU;gBAAK;aAAE;YAC3C,eAAe;gBAAE,MAAM;gBAAQ,UAAU;YAAK;QAChD;KACD;IACD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAM,UAAU;IAAK;IACxC,SAAS;QAAE,MAAM;QAAM,UAAU;IAAK;AACxC;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/api/exams/%5Bid%5D.js"],"sourcesContent":["// pages/api/exams/[id].js\nimport connectToDatabase from '../../../lib/db';\nimport Exam from '../../models/Exam';\nimport { ObjectId } from \"mongodb\";\n\nexport default async function handler(req, res) {\n  if (req.method !== \"GET\") {\n    return res.status(405).json({ message: \"Method Not Allowed\" });\n  }\n\n  try {\n    const { db } = await connectToDatabase(); // Ensure database connection\n    const { id } = req.query; // Get exam ID from URL\n\n    if (!ObjectId.isValid(id)) {\n      return res.status(400).json({ message: \"Invalid Exam ID\" });\n    }\n\n    const exam = await db.collection(\"exams\").findOne({ _id: new ObjectId(id) });\n\n    if (!exam) {\n      return res.status(404).json({ message: \"Exam Not Found\" });\n    }\n\n    res.status(200).json(exam);\n  } catch (error) {\n    console.error(\"MongoDB Fetch Error:\", error);\n    res.status(500).json({ message: \"Internal Server Error\", error: error.message });\n  }\n}\n\nexport default async function handler(req, res) {\n  console.log(\"Incoming request:\", req.method, req.query);\n  \n  try {\n    await connectToDatabase();\n    console.log(\"Connected to database\");\n\n    const { id } = req.query;\n\n    if (req.method === 'GET') {\n      const exam = await Exam.findById(id);\n      if (!exam) {\n        console.log(\"Exam not found for ID:\", id);\n        return res.status(404).json({ message: 'Exam not found' });\n      }\n\n      console.log(\"Exam found:\", exam);\n      return res.status(200).json(exam);\n    } else {\n      res.setHeader('Allow', ['GET']);\n      return res.status(405).json({ message: `Method ${req.method} not allowed` });\n    }\n  } catch (error) {\n    console.error(\"Error in API:\", error);\n    return res.status(500).json({ message: 'Internal Server Error', error: error.message });\n  }\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;AAC1B;AACA;AACA;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,OAAO;QACxB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAqB;IAC9D;IAEA,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAiB,AAAD,KAAK,6BAA6B;QACvE,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,uBAAuB;QAEjD,IAAI,CAAC,uGAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,KAAK;YACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAkB;QAC3D;QAEA,MAAM,OAAO,MAAM,GAAG,UAAU,CAAC,SAAS,OAAO,CAAC;YAAE,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC;QAAI;QAE1E,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAiB;QAC1D;QAEA,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAyB,OAAO,MAAM,OAAO;QAAC;IAChF;AACF;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,QAAQ,GAAG,CAAC,qBAAqB,IAAI,MAAM,EAAE,IAAI,KAAK;IAEtD,IAAI;QACF,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAiB,AAAD;QACtB,QAAQ,GAAG,CAAC;QAEZ,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;QAExB,IAAI,IAAI,MAAM,KAAK,OAAO;YACxB,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,MAAM;gBACT,QAAQ,GAAG,CAAC,0BAA0B;gBACtC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAiB;YAC1D;YAEA,QAAQ,GAAG,CAAC,eAAe;YAC3B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAC9B,OAAO;YACL,IAAI,SAAS,CAAC,SAAS;gBAAC;aAAM;YAC9B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS,CAAC,OAAO,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC;YAAC;QAC5E;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAyB,OAAO,MAAM,OAAO;QAAC;IACvF;AACF","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,0HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,0HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}