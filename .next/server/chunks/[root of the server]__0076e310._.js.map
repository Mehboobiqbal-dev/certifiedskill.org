{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/lib/db.js"],"sourcesContent":["// lib/db.js\nimport mongoose from 'mongoose';\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Please define the MONGO_URI environment variable');\n}\n\n// Use a global variable to cache the connection in development.\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n  \n  if (!cached.promise) {\n    cached.promise = mongoose.connect(process.env.MONGO_URI)\n      .then((mongoose) => mongoose.connection);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;IAC1B,MAAM,IAAI,MAAM;AAClB;AAEA,gEAAgE;AAChE,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EACpD,IAAI,CAAC,CAAC,WAAa,SAAS,UAAU;IAC3C;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/api/certificates/index.js"],"sourcesContent":["import PDFDocument from 'pdfkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport connectToDatabase from '../../../lib/db';\n\nexport default async function handler(req, res) {\n  // Connect to the database for both GET and POST methods.\n  let connection;\n  try {\n    connection = await connectToDatabase();\n  } catch (dbError) {\n    console.error('Database connection error:', dbError);\n    return res.status(500).json({ message: 'Database connection failed' });\n  }\n  \n  // Use the native Db instance. Replace 'myDatabase' with the name of your database if needed.\n  const db = connection.db || connection.useDb('myDatabase');\n\n  if (req.method === 'GET') {\n    const { certificateNumber, userEmail, userId } = req.query;\n    \n    // If a certificateNumber is provided, generate a PDF for that certificate.\n    if (certificateNumber) {\n      try {\n        const certificate = await db.collection('certificates').findOne({ certificateId: certificateNumber });\n        if (!certificate) {\n          return res.status(404).json({ message: 'Certificate not found' });\n        }\n        \n        // (Optional) You could add extra verification here to ensure that the certificate belongs to the currently authenticated user.\n        \n        // Set headers to render the PDF inline.\n        res.setHeader('Content-Type', 'application/pdf');\n        res.setHeader('Content-Disposition', 'inline; filename=\"certificate.pdf\"');\n  \n        // Generate a PDF using PDFKit.\n        const doc = new PDFDocument({\n          size: 'A4',\n          layout: 'landscape',\n          margins: { top: 50, bottom: 50, left: 50, right: 50 }\n        });\n        doc.pipe(res);\n  \n        const { width, height } = doc.page;\n  \n        // ----- PDF Certificate Design -----\n  \n        // 1. Background & border.\n        doc.rect(0, 0, width, height).fill('#ffffff'); // White background.\n        doc.rect(40, 40, width - 80, height - 80).lineWidth(2).stroke('#333333');\n  \n        // 2. Header\n        doc.fillColor('#333333')\n           .font('Helvetica-Bold')\n           .fontSize(20)\n           .text('CertifiedSkill.org', 0, 60, { align: 'center' });\n        doc.font('Helvetica')\n           .fontSize(12)\n           .text('Your trusted partner in professional certifications', { align: 'center' });\n  \n        // 3. Certificate Title.\n        doc.moveDown(2);\n        doc.font('Helvetica-Bold')\n           .fontSize(36)\n           .text('Certificate of Achievement', { align: 'center', underline: true });\n  \n        // 4. Certificate Details.\n        doc.moveDown(1.5);\n        doc.font('Helvetica')\n           .fontSize(18)\n           .text('This certificate verifies that', { align: 'center' });\n        doc.moveDown(0.5);\n        doc.font('Helvetica-Bold')\n           .fontSize(28)\n           .text(certificate.userName, { align: 'center' });\n        doc.moveDown(0.5);\n        doc.font('Helvetica')\n           .fontSize(18)\n           .text('has successfully passed the exam:', { align: 'center' });\n        doc.moveDown(0.5);\n        doc.font('Helvetica-Bold')\n           .fontSize(24)\n           .text(certificate.examName, { align: 'center' });\n  \n        // 5. Authenticity Assurance.\n        doc.moveDown(1.5);\n        doc.font('Helvetica')\n           .fontSize(14)\n           .text('This is an authentic certificate digitally issued by CertifiedSkill.org.', { align: 'center' });\n        doc.text('Visit CertifiedSkill.org.com to verify its authenticity.', { align: 'center' });\n  \n        // 6. Footer Details: Certificate ID and Issued Date.\n        const issuedOn = new Date(certificate.issuedAt).toLocaleDateString();\n        doc.font('Helvetica')\n           .fontSize(10)\n           .text(`Certificate ID: ${certificate.certificateId}`, 50, height - 70, { align: 'left' });\n        doc.font('Helvetica')\n           .fontSize(10)\n           .text(`Issued on: ${issuedOn}`, -50, height - 70, { align: 'right' });\n  \n        // 7. Signature Placeholder.\n        const signY = height - 100;\n        const signX = width - 200;\n        doc.moveTo(signX, signY)\n           .lineTo(signX + 100, signY)\n           .stroke('#333333');\n        doc.font('Helvetica')\n           .fontSize(10)\n           .text('Authorized Signature', signX, signY + 5, { align: 'center', width: 100 });\n  \n        // 8. GetCertify Stamp (optional).\n        const stampDiameter = 100;\n        const stampX = 50;\n        const stampY = height - stampDiameter - 50;\n        doc.circle(stampX + stampDiameter / 2, stampY + stampDiameter / 2, stampDiameter / 2)\n           .lineWidth(2)\n           .stroke('#003366');\n        doc.circle(stampX + stampDiameter / 2, stampY + stampDiameter / 2, stampDiameter / 2)\n           .fillOpacity(0.1)\n           .fill('#003366');\n        doc.fillOpacity(1)\n           .font('Helvetica-Bold')\n           .fontSize(14)\n           .fillColor('#003366')\n           .text('GetCertify', stampX, stampY + stampDiameter / 2 - 7, {\n              width: stampDiameter,\n              align: 'center'\n           });\n  \n        // Finalize and send the PDF.\n        doc.end();\n        return;\n      } catch (error) {\n        console.error('Error generating certificate PDF:', error);\n        return res.status(500).json({ message: 'Internal Server Error' });\n      }\n    }\n    \n    // Otherwise, if no certificateNumber is provided, list certificates:\n    if (!userEmail && !userId) {\n      return res.status(400).json({ message: 'Please provide a userEmail or userId in the query string' });\n    }\n    const query = {};\n    if (userEmail) query.userEmail = userEmail;\n    if (userId) query.userId = userId;\n    \n    try {\n      const certificates = await db.collection('certificates').find(query).toArray();\n      console.log(`Found ${certificates.length} certificate(s) for query:`, query);\n      return res.status(200).json(certificates);\n    } catch (error) {\n      console.error('Error fetching certificates:', error);\n      return res.status(500).json({ message: 'Internal Server Error' });\n    }\n    \n  } else if (req.method === 'POST') {\n    // POST: Generate or update a certificate after a passed exam.\n    const { userId, userName, examId, examName, passed, userEmail } = req.body;\n    \n    if (passed !== true && passed !== 'true') {\n      console.error('Exam not passed:', req.body);\n      return res.status(400).json({ message: 'User did not pass the exam' });\n    }\n    \n    try {\n      // Check if a certificate already exists.\n      let certificate = await db.collection('certificates').findOne({ userId, examId });\n  \n      if (certificate) {\n        console.log('Existing certificate found:', certificate);\n        if (!certificate.certificateId) {\n          certificate.certificateId = uuidv4();\n          await db.collection('certificates').updateOne(\n            { _id: certificate._id },\n            { $set: { certificateId: certificate.certificateId } }\n          );\n          console.log('Updated certificate with new certificateId:', certificate.certificateId);\n        }\n      } else {\n        certificate = {\n          userId,\n          userName,\n          examId,\n          examName,\n          certificateId: uuidv4(),\n          issuedAt: new Date(),\n          ...(userEmail && { userEmail })\n        };\n        await db.collection('certificates').insertOne(certificate);\n        console.log('Created new certificate:', certificate);\n      }\n      return res.status(200).json(certificate);\n    } catch (error) {\n      console.error('Certificate generation error:', error);\n      return res.status(500).json({ message: 'Internal Server Error' });\n    }\n  } else {\n    return res.status(405).json({ message: 'Method Not Allowed' });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,gIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,gIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}