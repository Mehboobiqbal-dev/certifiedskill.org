{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/lib/db.js"],"sourcesContent":["// lib/db.js\nimport mongoose from 'mongoose';\n\nif (!process.env.MONGO_URI) {\n  throw new Error('Please define the MONGO_URI environment variable');\n}\n\n// Use a global variable to cache the connection in development.\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n  \n  if (!cached.promise) {\n    cached.promise = mongoose.connect(process.env.MONGO_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    }).then(() => mongoose.connection);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;IAC1B,MAAM,IAAI,MAAM;AAClB;AAEA,gEAAgE;AAChE,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE;YACvD,iBAAiB;YACjB,oBAAoB;QACtB,GAAG,IAAI,CAAC,IAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU;IACnC;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/api/certificate/generate.js"],"sourcesContent":["import PDFDocument from 'pdfkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport connectToDatabase from '../../../lib/db';\nimport path from 'path';\nimport fs from 'fs';\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ message: 'Method Not Allowed' });\n  }\n\n  try {\n    // Expected payload: { userId, userName, examId, examName, passed }\n    const { userId, userName, examId, examName, passed } = req.body;\n    if (!passed) {\n      return res.status(400).json({ message: 'User did not pass the exam' });\n    }\n\n    // Connect to MongoDB.\n    const connection = await connectToDatabase();\n    const db = connection.db || connection.useDb('myDatabase'); // Replace 'myDatabase' if necessary\n\n    // Check if a certificate already exists for the user and exam.\n    const existing = await db.collection('certificates').findOne({ userId, examId });\n    if (existing) {\n      return res.status(200).json({ certificateNumber: existing.certificateNumber });\n    }\n\n    // Generate a unique certificate number.\n    const certificateNumber = uuidv4();\n\n    // Create a new PDF document.\n    const doc = new PDFDocument({\n      size: 'A4',\n      layout: 'landscape',\n      margins: { top: 50, bottom: 50, left: 50, right: 50 }\n    });\n\n    // Prepare to capture the PDF data.\n    let buffers = [];\n    doc.on('data', (chunk) => buffers.push(chunk));\n    doc.on('end', async () => {\n      const pdfData = Buffer.concat(buffers);\n\n      // Save certificate record in MongoDB.\n      await db.collection('certificates').insertOne({\n        userId,\n        examId,\n        userName,\n        examName,\n        certificateNumber,\n        issuedAt: new Date(),\n      });\n\n      // Return the certificate number or implement sending the PDF as needed.\n      res.status(200).json({ certificateNumber });\n      // Optionally, you could set headers and send back the pdfData:\n      // res.setHeader('Content-Type', 'application/pdf');\n      // res.send(pdfData);\n    });\n\n    // --- Designing the Certificate ---\n    // Load the background image.\n    const bgPath = path.join(process.cwd(), 'public', 'certificate-bg.png');\n    if (fs.existsSync(bgPath)) {\n      doc.image(bgPath, 0, 0, { width: doc.page.width, height: doc.page.height });\n    }\n\n    // Optionally register a custom font if you have one.\n    const customFontPath = path.join(process.cwd(), 'public', 'fonts', 'GreatVibes-Regular.ttf');\n    if (fs.existsSync(customFontPath)) {\n      doc.registerFont('CustomFont', customFontPath);\n    }\n\n    // Set fill color and font.\n    doc.fillColor('#003366');\n    doc.font(customFontPath && fs.existsSync(customFontPath) ? 'CustomFont' : 'Helvetica-Bold');\n    \n    // Certificate Title\n    doc.fontSize(48).text('Certificate of Achievement', {\n      align: 'center',\n      valign: 'center'\n    });\n    \n    doc.moveDown(1.5);\n\n    // Recipient Name\n    doc.fontSize(32).text(`This certifies that`, { align: 'center' });\n    doc.moveDown(0.5);\n    doc.fontSize(40).text(userName, { align: 'center' });\n    doc.moveDown(1);\n\n    // Exam Information\n    doc.fontSize(28).text(`has successfully passed the exam for`, { align: 'center' });\n    doc.moveDown(0.5);\n    doc.fontSize(36).text(examName, { align: 'center' });\n    doc.moveDown(1);\n\n    // Certificate Details\n    doc.fontSize(20).text(`Issued on: ${new Date().toLocaleDateString()}`, { align: 'center' });\n    doc.moveDown(0.5);\n    doc.text(`Certificate Number: ${certificateNumber}`, { align: 'center' });\n    // ------------------------------\n\n    doc.end();\n    // End of certificate generation\n  } catch (error) {\n    console.error('Error generating certificate:', error);\n    res.status(500).json({ message: 'Internal Server Error' });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,kIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,kIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}