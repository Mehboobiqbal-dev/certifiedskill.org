{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/pages/models/user.js"],"sourcesContent":["// models/User.js\nimport mongoose from 'mongoose'\n\nconst { Schema } = mongoose\n\nconst UserSchema = new Schema({\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  role: { type: String, enum: ['Admin', 'Examiner', 'Candidate'], default: 'Candidate' },\n  name: { type: String, required: true },\n  createdAt: { type: Date, default: Date.now }\n})\n\n// Prevent model overwrite upon hot-reloading in development\nexport default mongoose.models.User || mongoose.model('User', UserSchema)\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAEA,MAAM,EAAE,MAAM,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAE3B,MAAM,aAAa,IAAI,OAAO;IAC5B,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAS;YAAY;SAAY;QAAE,SAAS;IAAY;IACrF,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C;uCAGe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/lib/db.js"],"sourcesContent":["// lib/db.js\nimport mongoose from 'mongoose'\n\nconst MONGO_URI = process.env.MONGO_URI\nif (!MONGO_URI) {\n  throw new Error(\n    'Please define the MONGO_URI environment variable inside .env.local'\n  )\n}\n\n/** Global cache to maintain a single connection in development */\nlet cached = global.mongoose\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null }\n}\n\nasync function dbConnect() {\n  if (cached.conn) {\n    return cached.conn\n  }\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    }\n    cached.promise = mongoose.connect(MONGO_URI, opts).then((mongoose) => mongoose)\n  }\n  cached.conn = await cached.promise\n  return cached.conn\n}\n\nexport default dbConnect\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,SAAS;AACvC,IAAI,CAAC,WAAW;IACd,MAAM,IAAI,MACR;AAEJ;AAEA,gEAAgE,GAChE,IAAI,SAAS,OAAO,QAAQ;AAC5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IACA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QACA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,WAAW,MAAM,IAAI,CAAC,CAAC,WAAa;IACxE;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/pages/api/auth/register.js"],"sourcesContent":["import bcrypt from \"bcryptjs\";\nimport { NextResponse } from \"next/server\";\nimport User from \"../../models/user\";\nimport dbConnect from \"../../../lib/db\";\n\nexport async function POST(request) {\n  try {\n    const { name, email, password, confirmPassword } = await request.json();\n\n    if (!name || !email || !password || !confirmPassword) {\n      return NextResponse.json(\n        { message: \"All fields are required\" },\n        { status: 400 }\n      );\n    }\n\n    const isValidEmail = (email) =>\n      /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    if (!isValidEmail(email)) {\n      return NextResponse.json(\n        { message: \"Invalid email format\" },\n        { status: 400 }\n      );\n    }\n\n    if (password.length < 6) {\n      return NextResponse.json(\n        { message: \"Password must be at least 6 characters long\" },\n        { status: 400 }\n      );\n    }\n    if (password !== confirmPassword) {\n      return NextResponse.json(\n        { message: \"Passwords do not match\" },\n        { status: 400 }\n      );\n    }\n\n    await dbConnect();\n\n    const existingUser = await User.findOne({ email });\n    if (existingUser) {\n      return NextResponse.json(\n        { message: \"User already exists\" },\n        { status: 400 }\n      );\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    const newUser = new User({\n      name,\n      email,\n      password: hashedPassword,\n    });\n\n    await newUser.save();\n\n    return NextResponse.json(\n      { message: \"User registered successfully\" },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error(\"Error in register API:\", error);\n    return NextResponse.json(\n      { message: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,MAAM,QAAQ,IAAI;QAErE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,iBAAiB;YACpD,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,eAAe,CAAC,QACpB,6BAA6B,IAAI,CAAC;QACpC,IAAI,CAAC,aAAa,QAAQ;YACxB,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAuB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA8C,GACzD;gBAAE,QAAQ;YAAI;QAElB;QACA,IAAI,aAAa,iBAAiB;YAChC,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAyB,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,CAAA,GAAA,kGAAA,CAAA,UAAS,AAAD;QAEd,MAAM,eAAe,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,iBAAiB,MAAM,gHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,MAAM,UAAU,IAAI,gHAAA,CAAA,UAAI,CAAC;YACvB;YACA;YACA,UAAU;QACZ;QAEA,MAAM,QAAQ,IAAI;QAElB,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA+B,GAC1C;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,iIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/get-certified/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,2HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,2HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}