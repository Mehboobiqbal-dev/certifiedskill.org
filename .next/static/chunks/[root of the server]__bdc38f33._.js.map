{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\ntype SendMessage = (msg: any) => void;\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\n\nexport type ClientOptions = {\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  addMessageListener,\n  sendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkPath: ChunkPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/components/AntiCheating.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction AntiCheatingMulti({ onCheatingDetected, detectionThreshold = 3000 }) {\n  const [cheating, setCheating] = useState(false);\n  const [cheatCount, setCheatCount] = useState(0);\n  // If the page is inactive for longer than this timeout, flag cheating.\n  let visibilityTimeout;\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      // When page becomes hidden, start a timer.\n      if (document.hidden) {\n        visibilityTimeout = setTimeout(() => {\n          setCheating(true);\n          setCheatCount((prev) => prev + 1);\n          onCheatingDetected();\n        }, detectionThreshold);\n      } else {\n        // When page is shown, clear any pending timeout.\n        clearTimeout(visibilityTimeout);\n        setCheating(false);\n      }\n    };\n\n    const handleBlur = () => {\n      // User left the window (e.g., switched tabs)\n      visibilityTimeout = setTimeout(() => {\n        setCheating(true);\n        setCheatCount((prev) => prev + 1);\n        onCheatingDetected();\n      }, detectionThreshold);\n    };\n\n    const handleFocus = () => {\n      clearTimeout(visibilityTimeout);\n      setCheating(false);\n    };\n\n    // Optional: detect when mouse leaves the window\n    const handleMouseLeave = (e) => {\n      // If mouse leaves near the top (e.g., to the browser toolbar)\n      if (e.clientY <= 0) {\n        setCheating(true);\n        setCheatCount((prev) => prev + 1);\n        onCheatingDetected();\n      }\n    };\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    window.addEventListener(\"blur\", handleBlur);\n    window.addEventListener(\"focus\", handleFocus);\n    document.addEventListener(\"mouseleave\", handleMouseLeave);\n\n    // Cleanup listeners\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.removeEventListener(\"blur\", handleBlur);\n      window.removeEventListener(\"focus\", handleFocus);\n      document.removeEventListener(\"mouseleave\", handleMouseLeave);\n      clearTimeout(visibilityTimeout);\n    };\n  }, [onCheatingDetected, detectionThreshold]);\n\n  return (\n    <>\n      {cheating && (\n        <div className=\"fixed top-4 left-4 bg-red-600 text-white px-4 py-2 rounded shadow-md\">\n          Warning: Cheating Detected! (Count: {cheatCount})\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AntiCheatingMulti;\n"],"names":[],"mappings":";;;;AAAA;;;;AAEA,SAAS,kBAAkB,EAAE,kBAAkB,EAAE,qBAAqB,IAAI,EAAE;;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,uEAAuE;IACvE,IAAI;IAEJ,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;uCAAE;YACR,MAAM;sEAAyB;oBAC7B,2CAA2C;oBAC3C,IAAI,SAAS,MAAM,EAAE;wBACnB,oBAAoB;kFAAW;gCAC7B,YAAY;gCACZ;0FAAc,CAAC,OAAS,OAAO;;gCAC/B;4BACF;iFAAG;oBACL,OAAO;wBACL,iDAAiD;wBACjD,aAAa;wBACb,YAAY;oBACd;gBACF;;YAEA,MAAM;0DAAa;oBACjB,6CAA6C;oBAC7C,oBAAoB;kEAAW;4BAC7B,YAAY;4BACZ;0EAAc,CAAC,OAAS,OAAO;;4BAC/B;wBACF;iEAAG;gBACL;;YAEA,MAAM;2DAAc;oBAClB,aAAa;oBACb,YAAY;gBACd;;YAEA,gDAAgD;YAChD,MAAM;gEAAmB,CAAC;oBACxB,8DAA8D;oBAC9D,IAAI,EAAE,OAAO,IAAI,GAAG;wBAClB,YAAY;wBACZ;4EAAc,CAAC,OAAS,OAAO;;wBAC/B;oBACF;gBACF;;YAEA,SAAS,gBAAgB,CAAC,oBAAoB;YAC9C,OAAO,gBAAgB,CAAC,QAAQ;YAChC,OAAO,gBAAgB,CAAC,SAAS;YACjC,SAAS,gBAAgB,CAAC,cAAc;YAExC,oBAAoB;YACpB;+CAAO;oBACL,SAAS,mBAAmB,CAAC,oBAAoB;oBACjD,OAAO,mBAAmB,CAAC,QAAQ;oBACnC,OAAO,mBAAmB,CAAC,SAAS;oBACpC,SAAS,mBAAmB,CAAC,cAAc;oBAC3C,aAAa;gBACf;;QACF;sCAAG;QAAC;QAAoB;KAAmB;IAE3C,qBACE;kBACG,0BACC,0JAAC;YAAI,WAAU;;gBAAuE;gBAC/C;gBAAW;;;;;;;;AAK1D;GAtES;KAAA;uCAwEM","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///home/user/get-certified/pages/exam/%5Bid%5D.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport AntiCheating from \"../../components/AntiCheating\";\nimport { useSession } from \"next-auth/react\";\n\n// Import NextAuth server-side helper and your auth options\nimport { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"../../app/api/auth/[...nextauth]/authOptions\";\nimport connectToDatabase from \"../../lib/db\";\nimport Exam from \"../../models/exam\";\n\nexport default function ExamPage({ exam }) {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n\n  // Record the user's selected answers.\n  const [userAnswers, setUserAnswers] = useState({});\n  // Track whether the exam is submitted.\n  const [submitted, setSubmitted] = useState(false);\n  // For cheating detection.\n  const [cheatingCount, setCheatingCount] = useState(0);\n  // Total time taken (in seconds) across all questions.\n  const [timeTaken, setTimeTaken] = useState(0);\n\n  // For per-question handling:\n  const QUESTION_TIME = 20; // seconds per question\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [questionTimeLeft, setQuestionTimeLeft] = useState(QUESTION_TIME);\n\n  // Timer effect for each question.\n  useEffect(() => {\n    if (submitted) return;\n\n    const timer = setInterval(() => {\n      setQuestionTimeLeft((prevTime) => {\n        if (prevTime <= 1) {\n          proceedToNextQuestion(); // Auto move on when time's up.\n          return QUESTION_TIME;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [submitted, currentQuestionIndex]);\n\n  // Proceed to next question.\n  const proceedToNextQuestion = () => {\n    setTimeTaken((prev) => prev + (QUESTION_TIME - questionTimeLeft));\n\n    if (currentQuestionIndex < exam.questions.length - 1) {\n      setCurrentQuestionIndex((prev) => prev + 1);\n      setQuestionTimeLeft(QUESTION_TIME);\n    } else {\n      handleSubmit();\n    }\n  };\n\n  // Called when the user selects an option.\n  const handleOptionChange = (selectedOption) => {\n    setUserAnswers((prev) => ({\n      ...prev,\n      [currentQuestionIndex]: selectedOption,\n    }));\n    proceedToNextQuestion();\n  };\n\n  // When the exam is finished.\n  const handleSubmit = async () => {\n    if (submitted) return;\n    setSubmitted(true);\n\n    const correctCount = exam.questions.reduce((count, question, idx) => {\n      return userAnswers[idx] === question.correctAnswer ? count + 1 : count;\n    }, 0);\n    const total = exam.questions.length;\n    const passingScore = 40;\n    const passed = correctCount >= passingScore;\n\n    const resultData = {\n      userId: session?.user?.id,\n      examId: exam._id,\n      userName: session?.user?.name,\n      examName: exam.title,\n      score: correctCount,\n      total,\n      passed,\n      timeTaken,\n      cheatingCount,\n      createdAt: new Date(),\n    };\n\n    await onExamSubmit(resultData);\n  };\n\n  const handleCheatingDetected = () => {\n    setCheatingCount((prev) => prev + 1);\n  };\n\n  if (!exam.questions || exam.questions.length === 0) {\n    return <p>No questions found.</p>;\n  }\n\n  const currentQuestion = exam.questions[currentQuestionIndex];\n\n  return (\n    <div className=\"relative\">\n      {status === \"loading\" ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <AntiCheating onCheatingDetected={handleCheatingDetected} />\n          <div className=\"p-6 max-w-3xl mx-auto\">\n            <Head>\n              <title>{exam.title}</title>\n            </Head>\n            <h1 className=\"text-3xl font-bold mb-6\">{exam.title}</h1>\n            <h2 className=\"text-xl mb-4\">\n              Question {currentQuestionIndex + 1} of {exam.questions.length}\n            </h2>\n            <div className=\"bg-white shadow-md rounded-lg p-4 mb-6 border border-gray-200\">\n              <p className=\"text-lg font-medium mb-3\">\n                {currentQuestion.questionText}\n              </p>\n              <div>\n                {currentQuestion.options.map((option, i) => (\n                  <label\n                    key={i}\n                    className=\"block p-2 mb-2 border rounded cursor-pointer hover:bg-gray-100\"\n                  >\n                    <input\n                      type=\"radio\"\n                      name={`question-${currentQuestionIndex}`}\n                      value={option}\n                      onChange={() => handleOptionChange(option)}\n                      checked={userAnswers[currentQuestionIndex] === option}\n                      className=\"mr-2\"\n                    />\n                    {option}\n                  </label>\n                ))}\n              </div>\n              <div className=\"mt-3\">\n                <p className=\"text-sm text-gray-500\">\n                  Time left for this question: {questionTimeLeft} seconds\n                </p>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nasync function onExamSubmit(resultData) {\n  try {\n    const resultRes = await fetch(\"/api/exams/result\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(resultData),\n      cache: \"no-store\",\n    });\n    const resultJson = await resultRes.json();\n    if (!resultRes.ok) {\n      console.error(resultJson.message);\n      return;\n    }\n\n    if (resultData.passed) {\n      const certRes = await fetch(\"/api/certificate/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          userId: resultData.userId,\n          examId: resultData.examId,\n          userName: resultData.userName,\n          examName: resultData.examName,\n          passed: resultData.passed,\n        }),\n        cache: \"no-store\",\n      });\n      const certJson = await certRes.json();\n      if (certRes.ok) {\n        alert(\n          \"Certificate generated! Certificate Number: \" +\n            certJson.certificateNumber\n        );\n      } else {\n        console.error(certJson.message);\n      }\n    }\n  } catch (error) {\n    console.error(\"Submission error:\", error);\n  }\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getServerSession(\n    context.req,\n    context.res,\n    authOptions\n  );\n  if (!session) {\n    return { redirect: { destination: \"/sign-in\", permanent: false } };\n  }\n\n  try {\n    await connectToDatabase();\n    const exam = await Exam.findById(context.params.id);\n    if (!exam || !exam.questions) {\n      return { notFound: true };\n    }\n    const examObj = JSON.parse(JSON.stringify(exam));\n    return { props: { exam: examObj } };\n  } catch (error) {\n    console.error(\"Error fetching exam:\", error);\n    return { notFound: true };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/exam/[id]\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}